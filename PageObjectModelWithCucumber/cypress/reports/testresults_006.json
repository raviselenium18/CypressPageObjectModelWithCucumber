{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 1,
    "failures": 0,
    "start": "2020-10-01T10:02:12.844Z",
    "end": "2020-10-01T10:02:29.000Z",
    "duration": 16156,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 33.33333333333333,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0ea31f19-7032-40b5-a5a2-af629805a889",
      "title": "",
      "fullFile": "cypress\\integration\\Banking.feature",
      "file": "cypress\\integration\\Banking.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cfa5b16f-b11b-4527-9c9e-51c14693d068",
          "title": "Banking Feature",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login as Bank Manager",
              "fullTitle": "Banking Feature Login as Bank Manager",
              "timedOut": null,
              "duration": 12885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ac004389-022b-459d-813b-f09a559ef351",
              "parentUUID": "cfa5b16f-b11b-4527-9c9e-51c14693d068",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a Customer",
              "fullTitle": "Banking Feature Add a Customer",
              "timedOut": null,
              "duration": 3201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "686e5917-b711-4f78-adea-cd66c82d5b7a",
              "parentUUID": "cfa5b16f-b11b-4527-9c9e-51c14693d068",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Opening Account",
              "fullTitle": "Banking Feature Opening Account",
              "timedOut": null,
              "duration": 17,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// register this scenario with the cucumber data collector\n// but don't run it\n// Tell mocha this is a skipped test so it also shows correctly in Cypress\nconst state = window.testState;\ncy.then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => state.onFinishScenario(scenario))\n  // eslint-disable-next-line func-names\n  .then(function () {\n    return this.skip();\n  });",
              "err": {
                "message": "CypressError: sync skip; aborting execution",
                "estack": "[object Object]\nFrom Your Spec Code:\n    at Context.eval (http://www.way2automation.com/__cypress/tests?p=cypress\\integration\\Banking.feature:11920:10)\nFrom Your Spec Code:\n    at Context.eval (http://www.way2automation.com/__cypress/tests?p=cypress\\integration\\Banking.feature:11920:10)",
                "diff": null
              },
              "uuid": "c0d25770-190d-4baa-b581-d22d2057ca75",
              "parentUUID": "cfa5b16f-b11b-4527-9c9e-51c14693d068",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "ac004389-022b-459d-813b-f09a559ef351",
            "686e5917-b711-4f78-adea-cd66c82d5b7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "c0d25770-190d-4baa-b581-d22d2057ca75"
          ],
          "duration": 16103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testresults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "testresults",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "5.1.0"
    }
  }
}